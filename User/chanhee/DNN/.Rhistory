weighted_sum0 <- read.csv("/Users/chanhee/Desktop/BioDataLab/User/chanhee/DNN/result/result_weigthed_sum0.csv")
names(weighted_sum0)[1]<-"index"
weighted_sum1 <- read.csv("/Users/chanhee/Desktop/BioDataLab/User/chanhee/DNN/result/result_weigthed_sum1.csv")
names(weighted_sum1)[1]<-"index"
weighted_sum2 <- read.csv("/Users/chanhee/Desktop/BioDataLab/User/chanhee/DNN/result/result_weigthed_sum2.csv")
names(weighted_sum2)[1]<-"index"
weighted_sum3 <- read.csv("/Users/chanhee/Desktop/BioDataLab/User/chanhee/DNN/result/result_weigthed_sum3.csv")
names(weighted_sum3)[1]<-"index"
weighted_sum4 <- read.csv("/Users/chanhee/Desktop/BioDataLab/User/chanhee/DNN/result/result_weigthed_sum4.csv")
names(weighted_sum4)[1]<-"index"
index_genes<-weighted_sum0[,1:2]
sum_of_weights<-as.matrix(weighted_sum0[,3:4])+-as.matrix(weighted_sum1[,3:4])+as.matrix(weighted_sum2[,3:4])+as.matrix(weighted_sum3[,3:4])+-as.matrix(weighted_sum4[,3:4])
weighted_sum<-cbind(index_genes,sum_of_weights)
weighted_sum$abs_sum<-abs(weighted_sum$weighted_sum)
weighted_sum<-weighted_sum[rev(order(weighted_sum$abs_sum)),]
weighted_sum$gene_names<-as.character(weighted_sum$gene_names)
data<-read.csv("/Users/chanhee/Desktop/FinalData_GSM_gene_index_result.csv")
row.names(data)<-data$X
data<-data[,-1]
selected_gene_index<-weighted_sum$index+1
gene95<-write.csv("/Users/chanhee/Desktop/BioDataLab/User/chanhee/DNN/result_weigthed_sum_gene_95percent_off.csv")
gene95<-write.csv("/Users/chanhee/Desktop/BioDataLab/User/chanhee/DNN/result_weigthed_sum_gene_95percent_off.csv",header=T)
gene95<-write.csv("/Users/chanhee/Desktop/BioDataLab/User/chanhee/DNN/result_weigthed_sum_gene_95percent_off.csv",row.names = T)
gene95<-write.csv("/Users/chanhee/Desktop/BioDataLab/User/chanhee/DNN/result_weigthed_sum_gene_95percent_off.csv",col.names = 1)
gene95<-write.csv("/Users/chanhee/Desktop/BioDataLab/User/chanhee/DNN/result_weigthed_sum_gene_95percent_off.csv",col.names = T)
gene95<-write.csv("/Users/chanhee/Desktop/BioDataLab/User/chanhee/DNN/result_weigthed_sum_gene_95percent_off.csv")
gene95<-read.csv("/Users/chanhee/Desktop/BioDataLab/User/chanhee/DNN/result_weigthed_sum_gene_95percent_off.csv")
View(gene95)
gene95<-read.csv("/Users/chanhee/Desktop/BioDataLab/User/chanhee/DNN/result_weigthed_sum_gene_95percent_off.csv")
gene95<-read.csv("/Users/chanhee/Desktop/BioDataLab/User/chanhee/DNN/result_weigthed_sum_gene_95percent_off.csv")
gene90<-read.csv("/Users/chanhee/Desktop/BioDataLab/User/chanhee/DNN/result_weigthed_sum_gene_90percent_off.csv")
gene80<-read.csv("/Users/chanhee/Desktop/BioDataLab/User/chanhee/DNN/result_weigthed_sum_gene_80percent_off.csv")
gene70<-read.csv("/Users/chanhee/Desktop/BioDataLab/User/chanhee/DNN/result_weigthed_sum_gene_70percent_off.csv")
gene60<-read.csv("/Users/chanhee/Desktop/BioDataLab/User/chanhee/DNN/result_weigthed_sum_gene_60percent_off.csv")
gene<-cbind(gene95,gene90)
View(gene)
gene<-rbind(gene95,gene90)
View(gene)
gene<-rbind(gene,gene80)
gene<-rbind(gene,gene70)
gene<-rbind(gene,gene60)
gene<-rbind(gene,gene60)
gene<-rbind(gene,gene60)
gene<-rbind(gene,gene60)
gene<-rbind(gene,gene60)
gene<-rbind(gene,gene60)
gene<-rbind(gene,gene60)
gene<-rbind(gene,gene60)
gene<-data.frame()
gene<-rbind(gene,gene90)
gene<-rbind(gene,gene80)
gene<-rbind(gene,gene70)
gene<-rbind(gene,gene60)
gene<-rbind(gene,gene50)
gene<-rbind(gene,gene40)
gene<-rbind(gene,gene30)
gene<-rbind(gene,gene20)
gene<-rbind(gene,gene10)
gene<-rbind(gene,gene00)
View(gene)
View(gene95)
ggplot(gene,aes(x=Gene_Elimination,y=Training_Accuracy))+
geom_point()
library(ggplot2)
ggplot(gene,aes(x=Gene_Elimination,y=Training_Accuracy))+
geom_point()
library(reshape)
library(tidyr)
library(plyr)
library(scales)
data<-gather(data,key =c("Training_Accuracy","Calibration_Accuracy","Test_Accuracy") ,value = "Accuracy")
data<-gather(data,key ="Accuracy" ,value = =c("Training_Accuracy","Calibration_Accuracy","Test_Accuracy"))
data<-gather(data,key ="Accuracy" ,value  =c("Training_Accuracy","Calibration_Accuracy","Test_Accuracy"))
data<-gather(data,key ="Accuracy" ,value=c("Training_Accuracy","Calibration_Accuracy","Test_Accuracy"))
stocks <- tibble(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
data<-gather(data,key ="Data_Set" ,value="Accuracy",c("Training_Accuracy","Calibration_Accuracy","Test_Accuracy"))
?gather
data<-gather(data,key ="Data_Set" ,value="Accuracy",)
data<-gather(data,key ="Data_Set" ,value="Accuracy")
View(gene)
data<-gather(gene,key ="Data_Set" ,value="Accuracy",c("Training_Accuracy","Calibration_Accuracy","Test_Accuracy"))
View(data)
ggplot(data,aes(x=Gene_Elimination,y=Accuracy,fill=Data_set))+
geom_boxplot()
ggplot(data,aes(x=Gene_Elimination,y=Accuracy,fill=Data_Set))+
geom_boxplot()
ggplot(data,aes(x=Gene_Elimination,y=Accuracy,fill=Data_Set))+
geom_jitter()
data$Gene_Elimination<-as.factor(data$Gene_Elimination)
ggplot(data,aes(x=Gene_Elimination,y=Accuracy,fill=Data_Set))+
geom_jitter()
ggplot(data,aes(x=Gene_Elimination,y=Accuracy,fill=Data_Set))+
geom_point(
)
ggplot(data,aes(x=Gene_Elimination,y=Accuracy,col=Data_Set))+
geom_point(
)
ggplot(data,aes(x=Gene_Elimination,y=Accuracy))+
geom_boxplot(aes(fill=Data_Set))
ggplot(data,aes(x=Gene_Elimination,y=Accuracy))+
geom_boxplot(aes(fill=Data_Set))+
theme_bw()+
theme(plot.title = element_text(size=20, face="bold", color="darkgreen", hjust = 0.5),
axis.text = element_text(size=10),
legend.title = element_blank(),
legend.text = element_text(size = 15),
axis.title = element_text(size = 15),
axis.text.x = element_text(angle = 0,hjust=1,size = 15))
ggplot(data,aes(x=Gene_Elimination,y=Accuracy))+
geom_boxplot(aes(fill=Data_Set))+
theme_bw()+
labs(titles = "DNN Gene Selection by Weight",x="",y="Accuracy")+
theme(plot.title = element_text(size=20, face="bold", color="darkgreen", hjust = 0.5),
axis.text = element_text(size=10),
legend.title = element_blank(),
legend.text = element_text(size = 15),
axis.title = element_text(size = 15),
axis.text.x = element_text(angle = 0,hjust=1,size = 15))
ggplot(data,aes(x=Gene_Elimination,y=Accuracy))+
geom_boxplot(aes(fill=Data_Set))+
theme_bw()+
labs(titles = "DNN Gene Selection by Weight",x="",y="Accuracy")+
theme(plot.title = element_text(size=20, face="bold", color="darkgreen", hjust = 0.5),
axis.text = element_text(size=10),
legend.title = element_blank(),
legend.text = element_text(size = 15),
axis.title = element_text(size = 15),
axis.text.x = element_text(angle = 0,hjust=1,size = 15))+
scale_y_continuous(limits=c(0.5,1),oob = rescale_none)+
ggplot(data,aes(x=Gene_Elimination,y=Accuracy))+
geom_boxplot(aes(fill=Data_Set))+
theme_bw()+
labs(titles = "DNN Gene Selection by Weight",x="",y="Accuracy")+
theme(plot.title = element_text(size=20, face="bold", color="darkgreen", hjust = 0.5),
axis.text = element_text(size=10),
legend.title = element_blank(),
legend.text = element_text(size = 15),
axis.title = element_text(size = 15),
axis.text.x = element_text(angle = 0,hjust=1,size = 15))+
scale_y_continuous(limits=c(0.5,1),oob = rescale_none)
ggplot(data,aes(x=Gene_Elimination,y=Accuracy))+
geom_boxplot(aes(fill=Data_Set))+
theme_bw()+
labs(titles = "DNN Gene Selection by Weight",x="",y="Accuracy")+
theme(plot.title = element_text(size=20, face="bold", color="darkgreen", hjust = 0.5),
axis.text = element_text(size=10),
legend.title = element_blank(),
legend.text = element_text(size = 15),
axis.title = element_text(size = 15),
axis.text.x = element_text(angle = 0,hjust=1,size = 15))+
scale_y_continuous(limits=c(0.5,1),oob = rescale_none)
ggplot(data,aes(x=Gene_Elimination,y=Accuracy))+
geom_boxplot(aes(fill=Data_Set))+
theme_bw()+
labs(titles = "DNN Gene Selection by Weight",x="",y="Accuracy")+
theme(plot.title = element_text(size=20, face="bold", color="darkgreen", hjust = 0.5),
axis.text = element_text(size=10),
legend.title = element_blank(),
legend.text = element_text(size = 15),
axis.title = element_text(size = 15),
axis.text.x = element_text(angle = 0,hjust=1,size = 15))+
scale_y_continuous(limits=c(0.7,1),oob = rescale_none)
ggplot(data,aes(x=Gene_Elimination,y=Accuracy))+
geom_boxplot(aes(fill=Data_Set))+
theme_bw()+
labs(titles = "DNN Gene Selection by Weight",x="",y="Accuracy")+
theme(plot.title = element_text(size=20, face="bold", color="darkgreen", hjust = 0.5),
axis.text = element_text(size=10),
legend.title = element_blank(),
legend.text = element_text(size = 15),
axis.title = element_text(size = 15),
axis.text.x = element_text(angle = 0,hjust=1,size = 15))+
scale_y_continuous(limits=c(0.8,1),oob = rescale_none)
ggplot(data,aes(x=Gene_Elimination,y=Accuracy))+
geom_boxplot(aes(fill=Data_Set))+
theme_bw()+
labs(titles = "DNN Gene Selection by Weight",x="",y="Accuracy")+
theme(plot.title = element_text(size=20, face="bold", color="darkgreen", hjust = 0.5),
axis.text = element_text(size=10),
legend.title = element_blank(),
legend.text = element_text(size = 15),
axis.title = element_text(size = 15),
axis.text.x = element_text(angle = 0,hjust=1,size = 15))+
scale_y_continuous(limits=c(0.9,1),oob = rescale_none)
View(data)
gene<-rbind(gene,gene95)
gene<-data.frame()
gene<-rbind(gene,gene95)
gene<-rbind(gene,gene90)
gene<-rbind(gene,gene80)
gene<-rbind(gene,gene70)
gene<-rbind(gene,gene60)
gene<-rbind(gene,gene50)
gene<-rbind(gene,gene40)
gene<-rbind(gene,gene30)
View(gene)
data<-gather(gene,key ="Data_Set" ,value="Accuracy",c("Training_Accuracy","Calibration_Accuracy","Test_Accuracy"))
data$Gene_Elimination<-as.factor(data$Gene_Elimination)
ggplot(data,aes(x=Gene_Elimination,y=Accuracy))+
geom_boxplot(aes(fill=Data_Set))+
theme_bw()+
labs(titles = "DNN Gene Selection by Weight",x="",y="Accuracy")+
theme(plot.title = element_text(size=20, face="bold", color="darkgreen", hjust = 0.5),
axis.text = element_text(size=10),
legend.title = element_blank(),
legend.text = element_text(size = 15),
axis.title = element_text(size = 15),
axis.text.x = element_text(angle = 0,hjust=1,size = 15))+
scale_y_continuous(limits=c(0.9,1),oob = rescale_none)
data$Data_Set<-factor(data$Data_Set,levels = c("Training_Accuracy","Calibration_Accuracy","Test_Accuracy"))
ggplot(data,aes(x=Gene_Elimination,y=Accuracy))+
geom_boxplot(aes(fill=Data_Set))+
theme_bw()+
labs(titles = "DNN Gene Selection by Weight",x="",y="Accuracy")+
theme(plot.title = element_text(size=20, face="bold", color="darkgreen", hjust = 0.5),
axis.text = element_text(size=10),
legend.title = element_blank(),
legend.text = element_text(size = 15),
axis.title = element_text(size = 15),
axis.text.x = element_text(angle = 0,hjust=1,size = 15))+
scale_y_continuous(limits=c(0.9,1),oob = rescale_none)
ggplot(data,aes(x=Gene_Elimination,y=Accuracy))+
geom_boxplot(aes(fill=Data_Set))+
theme_bw()+
labs(titles = "DNN Gene Selection by Weight",x="Number of Genes",y="Accuracy")+
theme(plot.title = element_text(size=20, face="bold", color="darkgreen", hjust = 0.5),
axis.text = element_text(size=10),
legend.title = element_blank(),
legend.text = element_text(size = 15),
axis.title = element_text(size = 15),
axis.text.x = element_text(angle = 0,hjust=1,size = 15))+
scale_y_continuous(limits=c(0.9,1),oob = rescale_none)
ggplot(data,aes(x=Gene_Elimination,y=Accuracy))+
geom_boxplot(aes(fill=Data_Set))+
theme_bw()+
labs(titles = "DNN Gene Selection by Weight",x="Number of Genes",y="Accuracy")+
theme(plot.title = element_text(size=20, face="bold", color="darkgreen", hjust = 0.5),
axis.text = element_text(size=10),
legend.title = element_blank(),
legend.text = element_text(size = 10),
axis.title = element_text(size = 15),
axis.text.x = element_text(angle = 0,hjust=1,size = 15))+
scale_y_continuous(limits=c(0.9,1),oob = rescale_none)
ggplot(data,aes(x=Gene_Elimination,y=Accuracy))+
geom_boxplot(aes(fill=Data_Set))+
theme_bw()+
labs(titles = "DNN Gene Selection by Weight",x="Percent of Gene Elimination from 6000",y="Accuracy")+
theme(plot.title = element_text(size=20, face="bold", color="darkgreen", hjust = 0.5),
axis.text = element_text(size=10),
legend.title = element_blank(),
legend.text = element_text(size = 10),
axis.title = element_text(size = 15),
axis.text.x = element_text(angle = 0,hjust=1,size = 15))+
scale_y_continuous(limits=c(0.9,1),oob = rescale_none)
data<-mtcars
View(data)
library("H2o")
install.packages("h20")
install.packages("H20")
install.packages("h20")
library(installr)
updateR()
library(installr)
install.packages("installr")
options(download.file.method = "wget")
install.packages("installr")
options(download.file.method = "curl")
install.packages("installr")
install.packages("h20")
install.packages("h2o")
library("H2o")
library("h2o")
trData <- h2o::as.h2o(mtcars)
local.h2o <- h2o::h2o.init(ip = "localhost", port = 54321, startH2O = TRUE, nthreads = -1)
trData <- h2o::as.h2o(mtcars)
tsData <- h2o::as.h2o(mtcars)
train_result <- h2o::h2o.deeplearning(x = 2:785,
y = 1,
training_frame = trData,
activation = "Rectifier",
hidden = base::rep(10,3),
epochs = 20)
predict_result <- h2o::h2o.predict(object = train_result,
newdata = tsData[,-1])
predict_result.df <- base::as.data.frame(predict_result)
test_labels <- testing[,1]
test_labels <- tsData[,1]
num.correct.pred <- base::sum(base::diag(base::table(test_labels, predict_result.df[,1])))
View(predict_result.df)
train_result <- h2o::h2o.deeplearning(x = -2,
y = 2,
training_frame = trData,
activation = "Rectifier",
hidden = base::rep(10,3),
epochs = 20)
predict_result <- h2o::h2o.predict(object = train_result,
newdata = tsData[,-1])
train_result <- h2o::h2o.deeplearning(x = c(1,3,4,5,6,7,8,9,10,11),
y = 2,
training_frame = trData,
activation = "Rectifier",
hidden = base::rep(10,3),
epochs = 20)
predict_result <- h2o::h2o.predict(object = train_result,
newdata = tsData[,-2])
predict_result.df <- base::as.data.frame(predict_result)
test_labels <- tsData[,1]
num.correct.pred <- base::sum(base::diag(base::table(test_labels, predict_result.df[,1])))
data$cyl<-as.factor(data$cyl)
local.h2o <- h2o::h2o.init(ip = "localhost", port = 54321, startH2O = TRUE, nthreads = -1)
trData <- h2o::as.h2o(data)
tsData <- h2o::as.h2o(data)
train_result <- h2o::h2o.deeplearning(x = c(1,3,4,5,6,7,8,9,10,11),
y = 2,
training_frame = trData,
activation = "Rectifier",
hidden = base::rep(10,3),
epochs = 20)
predict_result <- h2o::h2o.predict(object = train_result,
newdata = tsData[,-2])
predict_result.df <- base::as.data.frame(predict_result)
test_labels <- tsData[,1]
num.correct.pred <- base::sum(base::diag(base::table(test_labels, predict_result.df[,1])))
test_labels <- tsData[,1]
test_labels <- tsData[,2]
num.correct.pred <- base::sum(base::diag(base::table(test_labels, predict_result.df[,1])))
test_labels
table(test_labels, predict_result.df[,1]
)
predict_result.df[,1]
table(test_labels,predict_result.df[,1])
length(predict_result.df)
length(predict_result.df)[1]
predict_result.df[1,]==test_labels
as.vector(predict_result.df[1,])==test_labels
str(predict_result.df[1,])
as.vector(predict_result.df[,1])==test_labels
as.vector(predict_result.df[,1])==test_labels
as.vector(predict_result.df[,1])
as.vector(as.integer(predict_result.df[,1]))
as.vector(as.integer(predict_result.df[,1]))==test_labels
as.vector(as.integer(predict_result.df[,1]))==as.vectors(as.integer(test_labels))
as.vector(as.integer(predict_result.df[,1]))==as.vector(as.integer(test_labels))
str(test_labels)
test_labels
test_labels$cyl
as.vector(as.integer(predict_result.df[,1]))==as.vector(as.integer(test_labels$cyl))
base::table(test_labels, predict_result.df[,1]))
base::table(test_labels, predict_result.df[,1])
p = h2o.performance(predict_result.df[1], test_labels)
str(predict_result.df[1])
p = h2o.performance(predict_result[1], test_labels)
p = h2o.performance(predict_result, test_labels)
predict_result <- h2o::h2o.predict(object = train_result,
newdata = tsData[,2])
predict_result <- h2o::h2o.predict(object = train_result,
newdata = tsData[,-2])
predict_result.df <- base::as.data.frame(predict_result)
View(predict_result.df)
test_labels <- data[,2]
num.correct.pred <- base::sum(base::diag(base::table(test_labels, predict_result.df[,1])))
correct.rate <- 100 * num.correct.pred / base::length(test_labels)
print(correct.rate)
train_result <- h2o::h2o.deeplearning(x = -2
y = 2,
training_frame = trData,
activation = "Rectifier",
hidden = base::rep(10,3),
epochs = 100)
train_result <- h2o::h2o.deeplearning(x = -2
y = 2,
training_frame = trData,
activation = "Rectifier",
hidden = base::rep(10,3),
epochs = 100)
predict_result <- h2o::h2o.predict(object = train_result,
newdata = tsData[,-2])
train_result <- h2o::h2o.deeplearning(x = -2
y = 2,
training_frame = trData,
activation = "Rectifier",
hidden = base::rep(10,3),
epochs = 100)
train_result <- h2o::h2o.deeplearning(x = -2,
y = 2,
training_frame = trData,
activation = "Rectifier",
hidden = base::rep(10,3),
epochs = 100)
predict_result <- h2o::h2o.predict(object = train_result,
newdata = tsData[,-2])
predict_result.df <- base::as.data.frame(predict_result)
test_labels <- data[,2]
num.correct.pred <- base::sum(base::diag(base::table(test_labels, predict_result.df[,1])))
correct.rate <- 100 * num.correct.pred / base::length(test_labels)
print(correct.rate)
train_result <- h2o::h2o.deeplearning(x = -2,
y = 2,
training_frame = trData,
activation = "Rectifier",
hidden = base::rep(10,3),
epochs = 10)
predict_result <- h2o::h2o.predict(object = train_result,
newdata = tsData[,-2])
predict_result.df <- base::as.data.frame(predict_result)
test_labels <- data[,2]
num.correct.pred <- base::sum(base::diag(base::table(test_labels, predict_result.df[,1])))
correct.rate <- 100 * num.correct.pred / base::length(test_labels)
print(correct.rate)
gene50<-read.csv("/Users/chanhee/Desktop/BioDataLab/User/chanhee/DNN/result_weigthed_sum_gene_50percent_off.csv")
gene30<-read.csv("/Users/chanhee/Desktop/BioDataLab/User/chanhee/DNN/result_weigthed_sum_gene_30percent_off.csv")
gene20<-read.csv("/Users/chanhee/Desktop/BioDataLab/User/chanhee/DNN/result_weigthed_sum_gene_20percent_off.csv")
gene10<-read.csv("/Users/chanhee/Desktop/BioDataLab/User/chanhee/DNN/result_weigthed_sum_gene_10percent_off.csv")
gene<-rbind(gene,gene50)
gene<-rbind(gene,gene30)
gene<-rbind(gene,gene20)
gene<-rbind(gene,gene10)
data<-gather(gene,key ="Data_Set" ,value="Accuracy",c("Training_Accuracy","Calibration_Accuracy","Test_Accuracy"))
data$Gene_Elimination<-as.factor(data$Gene_Elimination)
data$Data_Set<-factor(data$Data_Set,levels = c("Training_Accuracy","Calibration_Accuracy","Test_Accuracy"))
ggplot(data,aes(x=Gene_Elimination,y=Accuracy))+
geom_boxplot(aes(fill=Data_Set))+
theme_bw()+
labs(titles = "DNN Gene Selection by Weight",x="Percent of Gene Elimination from 6000",y="Accuracy")+
theme(plot.title = element_text(size=20, face="bold", color="darkgreen", hjust = 0.5),
axis.text = element_text(size=10),
legend.title = element_blank(),
legend.text = element_text(size = 10),
axis.title = element_text(size = 15),
axis.text.x = element_text(angle = 0,hjust=1,size = 15))+
scale_y_continuous(limits=c(0.9,1),oob = rescale_none)
ggplot(data,aes(x=Gene_Elimination,y=Accuracy))+
geom_boxplot(aes(fill=Data_Set))+
theme_bw()+
labs(titles = "DNN Gene Selection by Weight",x="Percent of Gene Elimination from 6000",y="Accuracy")+
theme(plot.title = element_text(size=20, face="bold", color="darkgreen", hjust = 0.5),
axis.text = element_text(size=10),
legend.title = element_blank(),
legend.text = element_text(size = 10),
axis.title = element_text(size = 15),
axis.text.x = element_text(angle = 0,hjust=1,size = 15))+
scale_y_continuous(limits=c(0.92,1),oob = rescale_none)
ggplot(data,aes(x=Gene_Elimination,y=Accuracy))+
geom_boxplot(aes(fill=Data_Set))+
theme_bw()+
labs(titles = "DNN Gene Selection by Weight",x="Percent of Gene Elimination from 6000",y="Accuracy")+
theme(plot.title = element_text(size=20, face="bold", color="darkgreen", hjust = 0.5),
axis.text = element_text(size=10),
legend.title = element_blank(),
legend.text = element_text(size = 10),
axis.title = element_text(size = 15),
axis.text.x = element_text(angle = 0,hjust=1,size = 15))+
scale_y_continuous(limits=c(0.93,1),oob = rescale_none)
gene40<-read.csv("/Users/chanhee/Desktop/BioDataLab/User/chanhee/DNN/result_weigthed_sum_gene_40percent_off.csv")
gene<-rbind(gene,gene40)
data<-gather(gene,key ="Data_Set" ,value="Accuracy",c("Training_Accuracy","Calibration_Accuracy","Test_Accuracy"))
data$Gene_Elimination<-as.factor(data$Gene_Elimination)
data$Data_Set<-factor(data$Data_Set,levels = c("Training_Accuracy","Calibration_Accuracy","Test_Accuracy"))
ggplot(data,aes(x=Gene_Elimination,y=Accuracy))+
geom_boxplot(aes(fill=Data_Set))+
theme_bw()+
labs(titles = "DNN Gene Selection by Weight",x="Percent of Gene Elimination from 6000",y="Accuracy")+
theme(plot.title = element_text(size=20, face="bold", color="darkgreen", hjust = 0.5),
axis.text = element_text(size=10),
legend.title = element_blank(),
legend.text = element_text(size = 10),
axis.title = element_text(size = 15),
axis.text.x = element_text(angle = 0,hjust=1,size = 15))+
scale_y_continuous(limits=c(0.93,1),oob = rescale_none)
i <- 0
for (j in 1:100) i <- i + 0.0001 + 0.0002 + 0.0002
i == 0.05
i
i -0.05
